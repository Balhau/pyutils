#!/usr/bin/env python
import sys
import argparse
from butils.blog.ghost import *
from butils.blog.blogger import *
from butils.blog.wordpress import *

'''
This is a executable python file, it should provide a shell API for operations regarding blog exporting features
'''
def main():

    DESCRIPTION='''
        This script will enable you to export your blog into epub. For now several blog engines are supported.
        Namely blogspot, wordpress, and ghost.


        Examples:

            To extract a wordpress blog into an epub you use, for example, the following
                ./blog2epub.py -b wordpress -l pt  -a "Balhau" -u "https://blog.balhau.net/" -n "Blog do Balhau.epub"

            To extract a ghost blog into an epub you use, for example, the following
                ./blog2epub.py -b ghost -d ghost-dev.db -o codeCorner.epub

            To extract a blogger blog into an epub you use, for example, the following
                ./blog2epub.py -b blogger -n poetaasvezes -a "Aurora" -l pt
    '''

    try:
        parser = argparse.ArgumentParser(description=DESCRIPTION,formatter_class=argparse.RawTextHelpFormatter)

        parser.add_argument('-c','--configs',
            help='''
            The config file with the needed keys
            ''')

            args = parser.parse_args()

        if args.configs != None:
            with open(args.configs,'r') as f:
                self.blacklist = yaml.load(f)

        if args.blog == 'ghost':
            if args.database != None and args.output != None:
                print "Extracting ghost database entries from ", args.database, " into ", args.output
                gh=GhostBlog(args.database)
                gh.toEpub(args.output)

        #Process blogger request
        if args.blog == 'blogger':
            if args.name != None and args.language != None and args.authors != None:
                print "Processing blogger ", args.name
                output = args.name +".epub"
                if args.output != None:
                    output = args.output
                auths=args.authors.split(",")
                bl=Blogspot(args.name,args.language,auths)
                bl.toEpub(output)


        #Process wordpress request
        if args.blog == 'wordpress':
            auths=args.authors.split(",")
            lang=args.language
            blogHost=args.url
            ebookName=args.name
            print "Extracting from Wordpress: ",blogHost," into ", ebookName
            wp=Wordpress(blogHost,ebookName,language=lang,authors=auths)
            wp.toEpub(ebookName)

    except Exception as ex:
        print ex.message
        sys.exit(2)

if __name__ == "__main__":
    main()
